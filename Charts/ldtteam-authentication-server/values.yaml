replicaCount: 1

image:
  repository: ghcr.io/ldtteam/authentication
  pullPolicy: IfNotPresent
  #tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  hostname: auth.minecolonies.com

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 90
  failureThreshold: 2
  periodSeconds: 60
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  failureThreshold: 15
  periodSeconds: 60
startupProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 0
  failureThreshold: 100
  periodSeconds: 60

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

environment:
  
postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        username: "ldtteam-donator-auth"
        password: "DonatorAuth1!"
        database: "donator-auth"

postgresha:
  enabled: false
  global:
    postgresql:
      password: "DonatorAuth1!"
      database: "donator-auth" 
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  persistence:
    accessModes:
    - ReadWriteOnce
    size: 25Gi
  postgresql:
    readinessProbe:
      initialDelaySeconds: 90
      failureThreshold: 15
      periodSeconds: 60
    livenessProbe:
      initialDelaySeconds: 90
      failureThreshold: 15
      periodSeconds: 60
      
